version: '3.7'
services:
  db:
    image: postgres:latest
    networks:
      - backend
    env_file:
      - ./services/testing.env

  nginx:
    image: telemetry/proxy:1.0
    networks:
      - frontend
    volumes:
      - "telemetry-socket-volume:/var/run/uwsgi/"
    build:
      context: ..
      dockerfile: ./deployments/services/nginx/Dockerfile
    ports:
      - 80:80
      - 443:443

  redis:
    image: redis:latest
    networks:
      - backend
    env_file:
      - ./services/testing.env

  collector:
    image: telemetry/collector:1.0
    networks:
      - backend
    volumes:
      - "telemetry-socket-volume:/var/www/collector/socket"
    build:
      context: ..
      dockerfile: ./deployments/services/collector/Dockerfile
    env_file:
      - services/testing.env
    depends_on: ["db", "redis"]
    command: uwsgi --ini /var/www/collector/collector.ini

  webapp:
    image: telemetry/webapp:1.0
    networks:
      - backend
    volumes:
      - "telemetry-socket-volume:/var/www/webapp/socket"
    build:
      context: ..
      dockerfile: ./deployments/services/webapp/Dockerfile
    env_file:
      - ./services/testing.env
    depends_on: ["db", "redis"]
    command: uwsgi --ini /var/www/webapp/webapp.ini

  process:
    image: telemetry/process:1.0
    networks:
      - backend
    build:
      context: ..
      dockerfile: ./deployments/services/processing/Dockerfile
    env_file:
      - ./services/testing.env
    depends_on: ["db", "migrate"]
    command: /srv/processing/run.sh

  migrate:
    image: telemetry/webapp:1.0
    networks:
      - backend
    env_file:
      - ./services/testing.env
    environment:
      FLASK_APP: /var/www/webapp/run.py
    working_dir: /var/www/webapp
    depends_on: ["db"]
    restart: on-failure
    command: flask db upgrade

volumes:
  telemetry-socket-volume:

networks:
  frontend:
    driver: bridge
  backend:
    driver: overlay
    internal: true
